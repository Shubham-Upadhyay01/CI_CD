name: Codebeamer SCM Synchronization

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']
  create:
  delete:

env:
  CODEBEAMER_URL: ${{ secrets.CODEBEAMER_URL }}
  CODEBEAMER_USERNAME: ${{ secrets.CODEBEAMER_USERNAME }}
  CODEBEAMER_PASSWORD: ${{ secrets.CODEBEAMER_PASSWORD }}
  CODEBEAMER_PROJECT_ID: ${{ secrets.CODEBEAMER_PROJECT_ID }}
  CODEBEAMER_REPO_NAME: ${{ secrets.CODEBEAMER_REPO_NAME }}
  GITHUB_REPO_URL: ${{ github.server_url }}/${{ github.repository }}

jobs:
  sync-to-codebeamer:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv gitpython

    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"

    - name: Try REST API Sync (for newer Codebeamer versions)
      id: rest_sync
      continue-on-error: true
      run: python scripts/sync_to_codebeamer.py
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_EVENT_PATH: ${{ github.event_path }}

    - name: Fallback to Web-based Sync (for older Codebeamer versions)
      if: steps.rest_sync.outcome == 'failure'
      run: python scripts/sync_to_codebeamer_web.py
      env:
        GITHUB_EVENT_NAME: ${{ github.event_name }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_EVENT_PATH: ${{ github.event_path }}

    - name: Update Codebeamer commit references
      if: github.event_name == 'push'
      continue-on-error: true
      run: python scripts/update_commit_refs.py
      env:
        COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
        COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
        COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp }}

    - name: Log sync results
      run: |
        echo "::notice::Codebeamer synchronization completed"
        echo "REST API Sync: ${{ steps.rest_sync.outcome }}"
        if [ "${{ steps.rest_sync.outcome }}" = "failure" ]; then
          echo "::warning::REST API sync failed - used web-based fallback for older Codebeamer version"
        fi

    - name: Notify on failure
      if: failure()
      run: |
        echo "::error::Codebeamer synchronization failed completely"
        python scripts/notify_failure.py

  validate-sync:
    needs: sync-to-codebeamer
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Validate Codebeamer sync
      continue-on-error: true
      run: python scripts/validate_sync.py
      env:
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }} 